// SPDX-License-Identifier: MIT 
pragma solidity ^0.8.0;
contract StudentRegistry { 
 struct Student { 
 uint rollNumber;
 string name;
 uint age;
 } 
 Student[] public students;
 constructor() { 
 // Initialize the contract with an empty array of students 
 } 
 function addStudent(uint _rollNumber, string memory _name, uint _age) public { 
 students.push(Student(_rollNumber, _name, _age));
 } 
 function getStudent(uint index) public view returns (uint, string memory, uint) { 
 require(index < students.length, "Student not found");
 Student memory student = students[index];
 return (student.rollNumber, student.name, student.age);
 } 
 fallback() external { 
 // Fallback function can be used to handle unexpected calls 
 revert("Invalid function call");
 } 
} 
 struct Student { 
 uint rollNumber;
 string name;
 uint age;
 }
